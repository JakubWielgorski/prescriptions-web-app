# Generated by Django 2.0.6 on 2018-11-24 15:18

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('gender', models.BooleanField()),
                ('title', models.CharField(choices=[('LE', 'lek.'), ('DR', 'dr n. med.'), ('DH', 'dr hab. n. med.'), ('PR', 'prof. dr hab. n. med.')], default='LE', max_length=2)),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dosage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=30)),
                ('doses_per_day', models.SmallIntegerField()),
                ('days_between_doses', models.SmallIntegerField(default=0)),
                ('time_of_day', models.CharField(choices=[('NO', ''), ('RA', ' rano'), ('WI', ' wieczorem')], default='NO', max_length=2)),
                ('eating_relation', models.CharField(choices=[('NO', ''), ('NC', ' na czczo'), ('PJ', ' po jedzeniu')], default='NO', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('form', models.CharField(choices=[('TB', 'tabletki'), ('ZS', 'zastrzyki')], max_length=2)),
                ('amount', models.PositiveIntegerField()),
                ('mg_of_active_substance', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('gender', models.BooleanField()),
                ('pesel', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('date_of_birth', models.DateField()),
                ('conditions', models.ManyToManyField(to='website.Condition')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Dosage')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Medication')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Prescription')),
            ],
        ),
        migrations.CreateModel(
            name='StoryEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('disease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Disease')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Substance',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.AddField(
            model_name='prescription',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.StoryEntry'),
        ),
        migrations.AddField(
            model_name='medication',
            name='active_substance',
            field=models.ManyToManyField(to='website.Substance'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='patients',
            field=models.ManyToManyField(to='website.Patient'),
        ),
        migrations.AddIndex(
            model_name='disease',
            index=models.Index(fields=['name'], name='website_dis_name_9186d8_idx'),
        ),
    ]
